// (c) 2012 vinxru

struct Cmp {
  int color, a1, c1, a2, c2;
};

Cmp cmp[] = {
{ 0x000000, 0x0, 0x0, 0x0, 0x0 },
{ 0x000033, 0x0, 0x0, 0x89, 0x7A },
{ 0x000066, 0x0, 0x0, 0x89, 0x7F },
{ 0x000099, 0x0, 0x0, 0x89, 0x3F },
{ 0x0000BB, 0x89, 0x7A, 0x89, 0x3F },
{ 0x0000DD, 0x89, 0x7F, 0x89, 0x3F },
{ 0x0000FF, 0x89, 0x3F, 0x89, 0x3F },
{ 0x003300, 0x0, 0x0, 0x85, 0x7A },
{ 0x003333, 0x0, 0x0, 0x81, 0x7A },
{ 0x003366, 0x85, 0x7A, 0x89, 0x7F },
{ 0x003399, 0x85, 0x7A, 0x89, 0x3F },
{ 0x0033BB, 0x89, 0x3F, 0x81, 0x7A },
{ 0x006600, 0x0, 0x0, 0x85, 0x7F },
{ 0x006633, 0x85, 0x7A, 0x81, 0x7A },
{ 0x006666, 0x0, 0x0, 0x81, 0x7F },
{ 0x006699, 0x85, 0x7F, 0x89, 0x3F },
{ 0x0066BB, 0x89, 0x7F, 0x81, 0x7F },
{ 0x0066DD, 0x89, 0x3F, 0x81, 0x7F },
{ 0x009900, 0x0, 0x0, 0x85, 0x3F },
{ 0x009933, 0x85, 0x7F, 0x81, 0x7A },
{ 0x009966, 0x85, 0x7A, 0x81, 0x7F },
{ 0x009999, 0x0, 0x0, 0x81, 0x3F },
{ 0x0099BB, 0x89, 0x7A, 0x81, 0x3F },
{ 0x0099DD, 0x89, 0x7F, 0x81, 0x3F },
{ 0x0099FF, 0x89, 0x3F, 0x81, 0x3F },
{ 0x00BB00, 0x85, 0x7A, 0x85, 0x3F },
{ 0x00BB33, 0x85, 0x3F, 0x81, 0x7A },
{ 0x00BB66, 0x85, 0x7F, 0x81, 0x7F },
{ 0x00BB99, 0x85, 0x7A, 0x81, 0x3F },
{ 0x00BBBB, 0x81, 0x7A, 0x81, 0x3F },
{ 0x00DD00, 0x85, 0x7F, 0x85, 0x3F },
{ 0x00DD66, 0x85, 0x3F, 0x81, 0x7F },
{ 0x00DD99, 0x85, 0x7F, 0x81, 0x3F },
{ 0x00DDDD, 0x81, 0x7F, 0x81, 0x3F },
{ 0x00FF00, 0x85, 0x3F, 0x85, 0x3F },
{ 0x00FF99, 0x85, 0x3F, 0x81, 0x3F },
{ 0x00FFFF, 0x81, 0x3F, 0x81, 0x3F },
{ 0x330000, 0x0, 0x0, 0x8C, 0x7A },
{ 0x330033, 0x0, 0x0, 0x88, 0x7A },
{ 0x330066, 0x8C, 0x7A, 0x89, 0x7F },
{ 0x330099, 0x8C, 0x7A, 0x89, 0x3F },
{ 0x3300BB, 0x89, 0x3F, 0x88, 0x7A },
{ 0x333300, 0x0, 0x0, 0x84, 0x7A },
{ 0x333333, 0x0, 0x0, 0x80, 0x7A },
{ 0x333366, 0x84, 0x7A, 0x89, 0x7F },
{ 0x333399, 0x84, 0x7A, 0x89, 0x3F },
{ 0x3333BB, 0x89, 0x3F, 0x80, 0x7A },
{ 0x336600, 0x8C, 0x7A, 0x85, 0x7F },
{ 0x336633, 0x85, 0x7A, 0x80, 0x7A },
{ 0x336666, 0x8C, 0x7A, 0x81, 0x7F },
{ 0x336699, 0x88, 0x7A, 0x81, 0x7F },
{ 0x339900, 0x8C, 0x7A, 0x85, 0x3F },
{ 0x339933, 0x85, 0x7F, 0x80, 0x7A },
{ 0x339966, 0x84, 0x7A, 0x81, 0x7F },
{ 0x339999, 0x8C, 0x7A, 0x81, 0x3F },
{ 0x3399BB, 0x88, 0x7A, 0x81, 0x3F },
{ 0x33BB00, 0x85, 0x3F, 0x84, 0x7A },
{ 0x33BB33, 0x85, 0x3F, 0x80, 0x7A },
{ 0x33BB99, 0x84, 0x7A, 0x81, 0x3F },
{ 0x33BBBB, 0x81, 0x3F, 0x80, 0x7A },
{ 0x660000, 0x0, 0x0, 0x8C, 0x7F },
{ 0x660033, 0x8C, 0x7A, 0x88, 0x7A },
{ 0x660066, 0x0, 0x0, 0x88, 0x7F },
{ 0x660099, 0x8C, 0x7F, 0x89, 0x3F },
{ 0x6600BB, 0x89, 0x7F, 0x88, 0x7F },
{ 0x6600DD, 0x89, 0x3F, 0x88, 0x7F },
{ 0x663300, 0x8C, 0x7A, 0x84, 0x7A },
{ 0x663333, 0x8C, 0x7A, 0x80, 0x7A },
{ 0x663366, 0x85, 0x7A, 0x88, 0x7F },
{ 0x663399, 0x88, 0x7F, 0x81, 0x7A },
{ 0x666600, 0x0, 0x0, 0x84, 0x7F },
{ 0x666633, 0x84, 0x7A, 0x80, 0x7A },
{ 0x666666, 0x0, 0x0, 0x80, 0x7F },
{ 0x666699, 0x84, 0x7F, 0x89, 0x3F },
{ 0x6666BB, 0x89, 0x7F, 0x80, 0x7F },
{ 0x6666DD, 0x89, 0x3F, 0x80, 0x7F },
{ 0x669900, 0x8C, 0x7F, 0x85, 0x3F },
{ 0x669933, 0x84, 0x7F, 0x81, 0x7A },
{ 0x669966, 0x85, 0x7A, 0x80, 0x7F },
{ 0x669999, 0x8C, 0x7F, 0x81, 0x3F },
{ 0x6699DD, 0x88, 0x7F, 0x81, 0x3F },
{ 0x66BB00, 0x85, 0x7F, 0x84, 0x7F },
{ 0x66BB66, 0x85, 0x7F, 0x80, 0x7F },
{ 0x66BBBB, 0x81, 0x7F, 0x80, 0x7F },
{ 0x66DD00, 0x85, 0x3F, 0x84, 0x7F },
{ 0x66DD66, 0x85, 0x3F, 0x80, 0x7F },
{ 0x66DD99, 0x84, 0x7F, 0x81, 0x3F },
{ 0x66DDDD, 0x81, 0x3F, 0x80, 0x7F },
{ 0x990000, 0x0, 0x0, 0x8C, 0x3F },
{ 0x990033, 0x8C, 0x7F, 0x88, 0x7A },
{ 0x990066, 0x8C, 0x7A, 0x88, 0x7F },
{ 0x990099, 0x0, 0x0, 0x88, 0x3F },
{ 0x9900BB, 0x89, 0x7A, 0x88, 0x3F },
{ 0x9900DD, 0x89, 0x7F, 0x88, 0x3F },
{ 0x9900FF, 0x89, 0x3F, 0x88, 0x3F },
{ 0x993300, 0x8C, 0x7F, 0x84, 0x7A },
{ 0x993333, 0x8C, 0x7F, 0x80, 0x7A },
{ 0x993366, 0x84, 0x7A, 0x88, 0x7F },
{ 0x993399, 0x85, 0x7A, 0x88, 0x3F },
{ 0x9933BB, 0x88, 0x3F, 0x81, 0x7A },
{ 0x996600, 0x8C, 0x7A, 0x84, 0x7F },
{ 0x996633, 0x84, 0x7F, 0x88, 0x7A },
{ 0x996666, 0x8C, 0x7A, 0x80, 0x7F },
{ 0x996699, 0x85, 0x7F, 0x88, 0x3F },
{ 0x9966DD, 0x88, 0x3F, 0x81, 0x7F },
{ 0x999900, 0x0, 0x0, 0x84, 0x3F },
{ 0x999933, 0x84, 0x7F, 0x80, 0x7A },
{ 0x999966, 0x84, 0x7A, 0x80, 0x7F },
{ 0x999999, 0x0, 0x0, 0x80, 0x3F },
{ 0x9999BB, 0x89, 0x7A, 0x80, 0x3F },
{ 0x9999DD, 0x89, 0x7F, 0x80, 0x3F },
{ 0x9999FF, 0x89, 0x3F, 0x80, 0x3F },
{ 0x99BB00, 0x85, 0x7A, 0x84, 0x3F },
{ 0x99BB33, 0x84, 0x3F, 0x81, 0x7A },
{ 0x99BB99, 0x85, 0x7A, 0x80, 0x3F },
{ 0x99BBBB, 0x81, 0x7A, 0x80, 0x3F },
{ 0x99DD00, 0x85, 0x7F, 0x84, 0x3F },
{ 0x99DD66, 0x84, 0x3F, 0x81, 0x7F },
{ 0x99DD99, 0x85, 0x7F, 0x80, 0x3F },
{ 0x99DDDD, 0x81, 0x7F, 0x80, 0x3F },
{ 0x99FF00, 0x85, 0x3F, 0x84, 0x3F },
{ 0x99FF99, 0x85, 0x3F, 0x80, 0x3F },
{ 0x99FFFF, 0x81, 0x3F, 0x80, 0x3F },
{ 0xBB0000, 0x8C, 0x7A, 0x8C, 0x3F },
{ 0xBB0033, 0x8C, 0x3F, 0x88, 0x7A },
{ 0xBB0066, 0x8C, 0x7F, 0x88, 0x7F },
{ 0xBB0099, 0x8C, 0x7A, 0x88, 0x3F },
{ 0xBB00BB, 0x88, 0x7A, 0x88, 0x3F },
{ 0xBB3300, 0x8C, 0x3F, 0x84, 0x7A },
{ 0xBB3333, 0x8C, 0x3F, 0x80, 0x7A },
{ 0xBB3399, 0x84, 0x7A, 0x88, 0x3F },
{ 0xBB33BB, 0x88, 0x3F, 0x80, 0x7A },
{ 0xBB6600, 0x8C, 0x7F, 0x84, 0x7F },
{ 0xBB6666, 0x8C, 0x7F, 0x80, 0x7F },
{ 0xBB66BB, 0x88, 0x7F, 0x80, 0x7F },
{ 0xBB9900, 0x8C, 0x7A, 0x84, 0x3F },
{ 0xBB9933, 0x84, 0x3F, 0x88, 0x7A },
{ 0xBB9999, 0x8C, 0x7A, 0x80, 0x3F },
{ 0xBB99BB, 0x88, 0x7A, 0x80, 0x3F },
{ 0xBBBB00, 0x84, 0x7A, 0x84, 0x3F },
{ 0xBBBB33, 0x84, 0x3F, 0x80, 0x7A },
{ 0xBBBB66, 0x84, 0x7F, 0x80, 0x7F },
{ 0xBBBB99, 0x84, 0x7A, 0x80, 0x3F },
{ 0xBBBBBB, 0x80, 0x7A, 0x80, 0x3F },
{ 0xDD0000, 0x8C, 0x7F, 0x8C, 0x3F },
{ 0xDD0066, 0x8C, 0x3F, 0x88, 0x7F },
{ 0xDD0099, 0x8C, 0x7F, 0x88, 0x3F },
{ 0xDD00DD, 0x88, 0x7F, 0x88, 0x3F },
{ 0xDD6600, 0x8C, 0x3F, 0x84, 0x7F },
{ 0xDD6666, 0x8C, 0x3F, 0x80, 0x7F },
{ 0xDD6699, 0x84, 0x7F, 0x88, 0x3F },
{ 0xDD66DD, 0x88, 0x3F, 0x80, 0x7F },
{ 0xDD9900, 0x8C, 0x7F, 0x84, 0x3F },
{ 0xDD9966, 0x84, 0x3F, 0x88, 0x7F },
{ 0xDD9999, 0x8C, 0x7F, 0x80, 0x3F },
{ 0xDD99DD, 0x88, 0x7F, 0x80, 0x3F },
{ 0xDDDD00, 0x84, 0x7F, 0x84, 0x3F },
{ 0xDDDD66, 0x84, 0x3F, 0x80, 0x7F },
{ 0xDDDD99, 0x84, 0x7F, 0x80, 0x3F },
{ 0xDDDDDD, 0x80, 0x7F, 0x80, 0x3F },
{ 0xFF0000, 0x8C, 0x3F, 0x8C, 0x3F },
{ 0xFF0099, 0x8C, 0x3F, 0x88, 0x3F },
{ 0xFF00FF, 0x88, 0x3F, 0x88, 0x3F },
{ 0xFF9900, 0x8C, 0x3F, 0x84, 0x3F },
{ 0xFF9999, 0x8C, 0x3F, 0x80, 0x3F },
{ 0xFF99FF, 0x88, 0x3F, 0x80, 0x3F },
{ 0xFFFF00, 0x84, 0x3F, 0x84, 0x3F },
{ 0xFFFF99, 0x84, 0x3F, 0x80, 0x3F },
{ 0xFFFFFF, 0x80, 0x3F, 0x80, 0x3F },
{ -1 },
};

#define RED(x) (x&0xFF)
#define GREEN(x) ((x>>8)&0xFF)
#define BLUE(x) ((x>>16)&0xFF)

int dest(double a, double b, double c, double d, double e, double f) {
  return int(sqrt((a-b)*(a-b) + (c-d)*(c-d) + (e-f)*(e-f)));
}

int noise(int a) {
  return a; //max(0,min(255,a+(rand()%16)-8));
}

Cmp* findColor(int cl) {
  int r = noise(RED(cl));
  int g = noise(GREEN(cl));
  int b = noise(BLUE(cl));
  int dd, di;
  for(int i=0; cmp[i].color!=-1; i++) {
    int cl2 = cmp[i].color;
    int d = dest(r, RED(cl2), g, GREEN(cl2), b, BLUE(cl2));
    if(i==0 || d<dd) dd=d, di=i;
  }
  return &cmp[di];
}

int APIENTRY _tWinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPTSTR    lpCmdLine, int       nCmdShow) {
  Bitmap bmp;
  bmp.load("input.bmp");

  FillBuffer buf;
  int* b = (int*)bmp.ptr32;
  for(int step=0; step<2; step++) {
    int pa = 0x80;
    for(int y=0; y<bmp.height; y++) {
      buf.str("  db ");
      int len=0, ac=0;
      for(int x=0; x<bmp.width; x++) {
        int cl = b[x+(bmp.height-y-1)*bmp.height];      
        Cmp* c = findColor(cl);
        if(x>0) buf.str(",");
        int a = step==0 ? c->a1 : c->a2, cc = step==0 ? c->c1 : c->c2;
        if(a!=0 && pa!=a) {
          pa = a;
          buf.i2s(pa).str(",");
          len++;
          ac++;
        }
        buf.i2s(cc);
        len++;
        if(ac==15 || len>=75) break;
        if(ac==17 || len>=77) throw exception("line=" + i2s(y));
      }
      for(; len<77; len++)
        buf.str(",0");
      buf.str(",0F1h\r\n");
    }
  }

  saveFile("output.inc", fcmCreateAlways, buf.buf);
	return 0;
}
